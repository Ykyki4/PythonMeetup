from telegram import KeyboardButton, ReplyKeyboardMarkup, InlineKeyboardButton, InlineKeyboardMarkup
from more_itertools import chunked

main_menu_buttons = {
    'program_button': 'üìã–ü—Ä–æ–≥—Ä–∞–º–º–∞',
    'cards_exchange_button': 'ü™™–û–±–º–µ–Ω –≤–∏–∑–∏—Ç–∫–∞–º–∏',
    'asked_questions_button': '‚ùì–ú–æ–∏ –≤–æ–ø—Ä–æ—Å—ã',
    'ask_question_button': 'üó£–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å —Å–ø–∏–∫–µ—Ä—É',
    'donation_button': 'üíµ–ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å –ø—Ä–æ–µ–∫—Ç',
}

donation_buttons = {
    '100': '100 —Ä—É–±–ª–µ–π',
    '150': '150 —Ä—É–±–ª–µ–π',
    '300': '300 —Ä—É–±–ª–µ–π',
    '500': '500 —Ä—É–±–ª–µ–π',
    '1000': '1000 —Ä—É–±–ª–µ–π',
}


def get_lists_of_buttons(buttons, rows_quantity):
    for button_number in range(0, len(buttons), rows_quantity):
        yield buttons[button_number: button_number + rows_quantity]


def get_keyboard(buttons, rows_quantity):
    reply_markup = ReplyKeyboardMarkup(
        keyboard=list(get_lists_of_buttons(buttons, rows_quantity)),
        resize_keyboard=True
    )
    return reply_markup


def get_arrows_keyboard(chunks, chunk):
    arrows_keyboard = []
    if chunks:
        arrows_keyboard.append(InlineKeyboardButton('‚¨ÖÔ∏è', callback_data='‚¨ÖÔ∏è')) \
            if chunk != 0 else None
        arrows_keyboard.append(InlineKeyboardButton('‚û°Ô∏è', callback_data='‚û°Ô∏è')) \
            if chunk + 1 != len(chunks) else None
    keyboard = [
        arrows_keyboard,
        [InlineKeyboardButton('–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data='back_to_menu')],
    ]

    return InlineKeyboardMarkup(keyboard)
